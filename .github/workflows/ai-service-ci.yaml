# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: AI Service CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ labeled ]

permissions:
  contents: read

concurrency:
  # avoid mis-canceling the ci runs while other labels are added to the PR, so we add the label name as the condition
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.label.name == 'ci/ai-service' && github.event.number || github.sha }}
  cancel-in-progress: true


defaults:
  run:
    working-directory: wren-ai-service

jobs:
  ci:
    if: ${{ github.event.label.name == 'ci/ai-service' || github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.12" ]
        poetry-version: [ "1.7.1" ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}
      - name: Install the project dependencies
        run: poetry install
      - name: Prepare testing environment
        run: |
          mkdir -p src/eval/wren-engine/etc && \
          cp src/eval/wren-engine/config.properties.example src/eval/wren-engine/etc/config.properties && \
          sed -i "s|bigquery.credentials-key=.*|bigquery.credentials-key=${{ secrets.BIGQUERY_CREDENTIALS_KEY }}|" src/eval/wren-engine/etc/config.properties && \
          poetry run python -m src.prepare_mdl_json --dataset_name book_2 && \
          docker run --net host -p 6333:6333 -p 6334:6334 -d --name qdrant qdrant/qdrant:v1.7.4 && \
          docker run --net host -p 8080:8080 -p 7432:7432 -d --name wren-engine ghcr.io/canner/wren-engine:latest --env-file ./src/eval/wren-engine/.env && \
          poetry run pytest && \
          docker stop qdrant && docker rm qdrant && \
          docker stop wren-engine && docker rm wren-engine
        env:
          WREN_ENGINE_ENDPOINT: http://localhost:8080
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          QDRANT_HOST: localhost
          ENV: dev