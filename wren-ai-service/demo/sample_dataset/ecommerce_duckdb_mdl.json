{
  "catalog": "wrenai",
  "schema": "public",
  "models": [
    {
      "name": "customers",
      "refSql": "select * from main.customers",
      "columns": [
        {
          "name": "City",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "The Customer City, where the customer company is located. Also called \"customer segment\".",
            "displayName": "City"
          }
        },
        {
          "name": "Id",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A unique identifier for each customer in the data model.",
            "displayName": "Id"
          }
        },
        {
          "name": "State",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A field indicating the state where the customer is located.",
            "displayName": "State"
          }
        },
        {
          "name": "orders",
          "type": "orders",
          "relationship": "CustomersIdOrdersCustomerid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        }
      ],
      "primaryKey": "Id",
      "cached": false,
      "refreshTime": "30.00m",
      "properties": {
        "schema": "main",
        "catalog": "memory",
        "description": "A table of customers who have made purchases, including their city",
        "displayName": "customers"
      }
    },
    {
      "name": "order_items",
      "refSql": "select * from main.order_items",
      "columns": [
        {
          "name": "FreightValue",
          "type": "DOUBLE",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A numerical value representing the cost of shipping for an item in an order.",
            "displayName": "FreightValue"
          }
        },
        {
          "name": "Id",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "displayName": "Id"
          }
        },
        {
          "name": "ItemNumber",
          "type": "BIGINT",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "The sequential number of the order item in this order. Each order item in an order has its unique ItemNumber.",
            "displayName": "ItemNumber"
          }
        },
        {
          "name": "OrderId",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A VARCHAR value indicating the order that this order_item belongs to. The column is used to map the order_item to Orders model in the OrdersOrder_items relationship.",
            "displayName": "OrderId"
          }
        },
        {
          "name": "Price",
          "type": "DOUBLE",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A numerical value representing the price of an item in an order.",
            "displayName": "Price"
          }
        },
        {
          "name": "ProductId",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A VARCHAR value representing the product of this order_item. The column is used to map the order_item to Products model using ProductsOrder_items relationship.",
            "displayName": "ProductId"
          }
        },
        {
          "name": "ShippingLimitDate",
          "type": "DATE",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A date value indicating the limit by which an item should be shipped according to the order. It helps track the deadline for shipping items in the \"order_items\" model.",
            "displayName": "ShippingLimitDate"
          }
        },
        {
          "name": "orders",
          "type": "orders",
          "relationship": "OrdersOrderidOrder_itemsOrderid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        },
        {
          "name": "products",
          "type": "products",
          "relationship": "ProductsIdOrder_itemsProductid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        }
      ],
      "primaryKey": "Id",
      "cached": false,
      "refreshTime": "30.00m",
      "properties": {
        "schema": "main",
        "catalog": "memory",
        "description": "The model is used to store information about items in orders, including details like prices, product IDs, shipping limits, and relationships with orders and products tables.",
        "displayName": "order_items"
      }
    },
    {
      "name": "orders",
      "refSql": "select * from main.orders",
      "columns": [
        {
          "name": "ApprovedTimestamp",
          "type": "TIMESTAMP",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column that represents the timestamp when the order was approved.",
            "displayName": "ApprovedTimestamp"
          }
        },
        {
          "name": "CustomerId",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A unique identifier representing the customer who purchased this order.",
            "displayName": "CustomerId"
          }
        },
        {
          "name": "DeliveredCarrierDate",
          "type": "DATE",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column that represents the date when the order was delivered by the carrier.",
            "displayName": "DeliveredCarrierDate"
          }
        },
        {
          "name": "DeliveredCustomerDate",
          "type": "DATE",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column that represents the date when the order was delivered to the customer.",
            "displayName": "DeliveredCustomerDate"
          }
        },
        {
          "name": "EstimatedDeliveryDate",
          "type": "DATE",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column that represents the estimated delivery date of the order.",
            "displayName": "EstimatedDeliveryDate"
          }
        },
        {
          "name": "OrderId",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column that represents a unique identifier of this order.",
            "displayName": "OrderId"
          }
        },
        {
          "name": "PurchaseTimestamp",
          "type": "TIMESTAMP",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column that represents the timestamp when the order was purchased.",
            "displayName": "PurchaseTimestamp"
          }
        },
        {
          "name": "Status",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column representing the status of the order.",
            "displayName": "Status"
          }
        },
        {
          "name": "customers",
          "type": "customers",
          "relationship": "CustomersIdOrdersCustomerid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        },
        {
          "name": "order_items",
          "type": "order_items",
          "relationship": "OrdersOrderidOrder_itemsOrderid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        },
        {
          "name": "reviews",
          "type": "reviews",
          "relationship": "OrdersOrderidReviewsOrderid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        },
        {
          "name": "payments",
          "type": "payments",
          "relationship": "PaymentsOrderidOrdersOrderid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        }
      ],
      "primaryKey": "OrderId",
      "cached": false,
      "refreshTime": "30.00m",
      "properties": {
        "schema": "main",
        "catalog": "memory",
        "description": "A model representing the orders data.",
        "displayName": "orders"
      }
    },
    {
      "name": "payments",
      "refSql": "select * from main.payments",
      "columns": [
        {
          "name": "Id",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "displayName": "Id"
          }
        },
        {
          "name": "Installments",
          "type": "BIGINT",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column representing the number of installments in the payments data model.",
            "displayName": "Installments"
          }
        },
        {
          "name": "OrderId",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column representing the order id associated with this payment. The column is used to map the payment to the order using PaymentsOrders relationship.",
            "displayName": "OrderId"
          }
        },
        {
          "name": "Sequential",
          "type": "BIGINT",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column representing the sequential number of the payment in its corresponding order. Each payment in the order has its unique sequential number.",
            "displayName": "Sequential"
          }
        },
        {
          "name": "Type",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column representing the type of payment in the payments data model.",
            "displayName": "Type"
          }
        },
        {
          "name": "Value",
          "type": "DOUBLE",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A column representing the value of the payment in the payments data model.",
            "displayName": "Value"
          }
        },
        {
          "name": "orders",
          "type": "orders",
          "relationship": "PaymentsOrderidOrdersOrderid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        }
      ],
      "primaryKey": "Id",
      "cached": false,
      "refreshTime": "30.00m",
      "properties": {
        "schema": "main",
        "catalog": "memory",
        "description": "A model representing the payment records, including installments, order IDs, sequential numbers, payment types, values, and relationships with orders.",
        "displayName": "payments"
      }
    },
    {
      "name": "products",
      "refSql": "select * from main.products",
      "columns": [
        {
          "name": "Category",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A category that classifies the products in the data model.",
            "displayName": "Category"
          }
        },
        {
          "name": "Id",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A unique identifier assigned to each product in the data model.",
            "displayName": "Id"
          }
        },
        {
          "name": "Name",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A name of the product in the data model.",
            "displayName": "Name"
          }
        },
        {
          "name": "order_items",
          "type": "order_items",
          "relationship": "ProductsIdOrder_itemsProductid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        }
      ],
      "primaryKey": "Id",
      "cached": false,
      "refreshTime": "30.00m",
      "properties": {
        "schema": "main",
        "catalog": "memory",
        "description": "A data model containing information about products such as category, ID, and name, with a relationship to order items.",
        "displayName": "products"
      }
    },
    {
      "name": "reviews",
      "refSql": "select * from main.reviews",
      "columns": [
        {
          "name": "AnswerTimestamp",
          "type": "TIMESTAMP",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "The date when the answer was provided.",
            "displayName": "AnswerTimestamp"
          }
        },
        {
          "name": "CreationTimestamp",
          "type": "TIMESTAMP",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "The date when the review was created.",
            "displayName": "CreationTimestamp"
          }
        },
        {
          "name": "Id",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "A unique identifier assigned to each review entry.",
            "displayName": "Id"
          }
        },
        {
          "name": "OrderId",
          "type": "VARCHAR",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "The order id of the order which the review belongs to.",
            "displayName": "OrderId"
          }
        },
        {
          "name": "Score",
          "type": "BIGINT",
          "isCalculated": false,
          "notNull": false,
          "properties": {
            "description": "The score associated with each review entry.",
            "displayName": "Score"
          }
        },
        {
          "name": "orders",
          "type": "orders",
          "relationship": "OrdersOrderidReviewsOrderid",
          "isCalculated": false,
          "notNull": false,
          "properties": {}
        }
      ],
      "primaryKey": "Id",
      "cached": false,
      "refreshTime": "30.00m",
      "properties": {
        "schema": "main",
        "catalog": "memory",
        "description": "A model containing information about review of orders.",
        "displayName": "reviews"
      }
    }
  ],
  "relationships": [
    {
      "name": "CustomersIdOrdersCustomerid",
      "models": ["customers", "orders"],
      "joinType": "ONE_TO_MANY",
      "condition": "\"customers\".Id = \"orders\".CustomerId",
      "manySideSortKeys": [],
      "properties": {}
    },
    {
      "name": "OrdersOrderidOrder_itemsOrderid",
      "models": ["orders", "order_items"],
      "joinType": "ONE_TO_MANY",
      "condition": "\"orders\".OrderId = \"order_items\".OrderId",
      "manySideSortKeys": [],
      "properties": {}
    },
    {
      "name": "ProductsIdOrder_itemsProductid",
      "models": ["products", "order_items"],
      "joinType": "ONE_TO_MANY",
      "condition": "\"products\".Id = \"order_items\".ProductId",
      "manySideSortKeys": [],
      "properties": {}
    },
    {
      "name": "OrdersOrderidReviewsOrderid",
      "models": ["orders", "reviews"],
      "joinType": "ONE_TO_MANY",
      "condition": "\"orders\".OrderId = \"reviews\".OrderId",
      "manySideSortKeys": [],
      "properties": {}
    },
    {
      "name": "PaymentsOrderidOrdersOrderid",
      "models": ["payments", "orders"],
      "joinType": "MANY_TO_ONE",
      "condition": "\"payments\".OrderId = \"orders\".OrderId",
      "manySideSortKeys": [],
      "properties": {}
    }
  ],
  "enumDefinitions": [],
  "metrics": [],
  "cumulativeMetrics": [],
  "views": [],
  "macros": [],
  "dateSpine": {
    "unit": "DAY",
    "start": "1970-01-01",
    "end": "2077-12-31",
    "properties": {}
  }
}
