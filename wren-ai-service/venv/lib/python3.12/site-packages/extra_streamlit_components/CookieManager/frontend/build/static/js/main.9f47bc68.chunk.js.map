{"version":3,"sources":["../../../../../../Programming/Python/ExtraStreamlitComponents/extra_streamlit_components/CookieManager/frontend/src/CookieManager.jsx","../../../../../../Programming/Python/ExtraStreamlitComponents/extra_streamlit_components/CookieManager/frontend/src/index.jsx"],"names":["last_output","cookies","Cookies","withStreamlitConnection","props","args","method","cookie","value","expires_at","output","set","path","samesite","expires","Date","setCookie","get","getCookie","getAll","remove","deleteCookie","JSON","stringify","Streamlit","setComponentValue","setComponentReady","useEffect","setFrameHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLASIA,EAAc,KACZC,EAAU,IAAIC,IA8DLC,eA5DO,SAACC,GACrB,IAuBQC,EAASD,EAATC,KAEFC,EAASD,EAAI,OACbE,EAASF,EAAI,OACbG,EAAQH,EAAI,MACZI,EAAaJ,EAAI,WAEnBK,EAAS,KAEb,OAAQJ,GACN,IAAK,MACHI,EAlCc,SAACH,EAAQC,EAAOC,GAMhC,OALAR,EAAQU,IAAIJ,EAAQC,EAAO,CACzBI,KAAM,IACNC,SAAU,SACVC,QAAS,IAAIC,KAAKN,MAEb,EA4BIO,CAAUT,EAAQC,EAAOC,GAClC,MACF,IAAK,MACHC,EA5Bc,SAACH,GAEjB,OADcN,EAAQgB,IAAIV,GA2BfW,CAAUX,GACnB,MACF,IAAK,SACHG,EApBKT,EAAQkB,SAqBb,MACF,IAAK,SACHT,EA7BiB,SAACH,GAEpB,OADAN,EAAQmB,OAAOb,EAAQ,CAAEK,KAAM,IAAKC,SAAU,YACvC,EA2BIQ,CAAad,GAa1B,OAPIG,GAAUY,KAAKC,UAAUvB,IAAgBsB,KAAKC,UAAUb,KAC1DV,EAAcU,EACdc,IAAUC,kBAAkBf,GAC5Bc,IAAUE,qBAGZC,qBAAU,kBAAMH,IAAUI,oBACnB,2BCjETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f47bc68.chunk.js","sourcesContent":["import {\n  Streamlit,\n  ComponentProps,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { useEffect, useState } from \"react\"\n\nimport Cookies from \"universal-cookie\"\n\nlet last_output = null\nconst cookies = new Cookies()\n\nconst CookieManager = (props: ComponentProps) => {\n  const setCookie = (cookie, value, expires_at) => {\n    cookies.set(cookie, value, {\n      path: \"/\",\n      samesite: \"strict\",\n      expires: new Date(expires_at),\n    })\n    return true\n  }\n\n  const getCookie = (cookie) => {\n    const value = cookies.get(cookie)\n    return value\n  }\n\n  const deleteCookie = (cookie) => {\n    cookies.remove(cookie, { path: \"/\", samesite: \"strict\" })\n    return true\n  }\n\n  const getAllCookies = () => {\n    return cookies.getAll()\n  }\n\n  const { args } = props\n\n  const method = args[\"method\"]\n  const cookie = args[\"cookie\"]\n  const value = args[\"value\"]\n  const expires_at = args[\"expires_at\"]\n\n  let output = null\n\n  switch (method) {\n    case \"set\":\n      output = setCookie(cookie, value, expires_at)\n      break\n    case \"get\":\n      output = getCookie(cookie)\n      break\n    case \"getAll\":\n      output = getAllCookies()\n      break\n    case \"delete\":\n      output = deleteCookie(cookie)\n      break\n    default:\n      break\n  }\n\n  if (output && JSON.stringify(last_output) != JSON.stringify(output)) {\n    last_output = output\n    Streamlit.setComponentValue(output)\n    Streamlit.setComponentReady()\n  }\n\n  useEffect(() => Streamlit.setFrameHeight())\n  return <div></div>\n}\n\nexport default withStreamlitConnection(CookieManager)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport CookieManager from \"./CookieManager\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <CookieManager />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}