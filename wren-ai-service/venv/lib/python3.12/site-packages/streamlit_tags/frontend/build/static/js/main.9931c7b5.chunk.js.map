{"version":3,"sources":["keywords.tsx","index.tsx"],"names":["withStreamlitConnection","props","args","label","text","initialValue","useState","value","setValue","useEffect","Streamlit","setFrameHeight","onChange","values","setComponentValue","name","placeHolder","engine","Styletron","ReactDOM","render","StrictMode","theme","LightTheme","document","getElementById"],"mappings":"2OA6CeA,G,MAAAA,aAxBS,SAACC,GAA0B,MAGDA,EAAMC,KAAhDC,EAH2C,EAG3CA,MAAOC,EAHoC,EAGpCA,KAAMC,EAH8B,EAG9BA,aAH8B,EAIvBC,mBAASD,GAJc,mBAI1CE,EAJ0C,KAInCC,EAJmC,KAWjD,OADAC,qBAAU,kBAAMC,IAAUC,oBAExB,6BACI,4BAAKR,GACL,kBAAC,IAAD,CACAI,MAAOA,EACPK,SAAW,SAACL,GAAD,OATfC,EADgBK,EAUoBN,QARpCG,IAAUI,kBAAmBD,GAFd,IAACA,GAWZE,KAAMZ,EACNa,YAAaZ,S,gCC7Bfa,EAAS,IAAIC,IAGnBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAmBd,MAAOU,GACxB,kBAAC,IAAD,CAAeK,MAAOC,KACpB,kBAAC,EAAD,SAINC,SAASC,eAAe,W","file":"static/js/main.9931c7b5.chunk.js","sourcesContent":["import React,{ useEffect, useState }  from \"react\"\r\nimport { ComponentProps, Streamlit, withStreamlitConnection } from \"streamlit-component-lib\"\r\nimport { TagsInput } from \"react-tag-input-component\";\r\nimport \"./styles.css\";\r\n\r\n/**\r\n * We can use a Typescript interface to destructure the arguments from Python\r\n * and validate the types of the input\r\n */\r\ninterface PythonArgs {\r\n  label: string\r\n  text: string\r\n  initialValue: string[]\r\n}\r\n\r\n/**\r\n * No more props manipulation in the code.\r\n * We store props in state and pass value directly to underlying Slider\r\n * and then back to Streamlit.\r\n */\r\n\r\nconst Custom_keywords = (props: ComponentProps) => {\r\n  // Destructure using Typescript interface\r\n  // This ensures typing validation for received props from Python\r\n  let { label, text, initialValue }: PythonArgs = props.args\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  const onSubmit = (values: string[]) => {\r\n    setValue(values)\r\n    Streamlit.setComponentValue((values))\r\n  }\r\n  useEffect(() => Streamlit.setFrameHeight())\r\n  return (\r\n    <div>\r\n        <h3>{label}</h3>\r\n        <TagsInput\r\n        value={value}\r\n        onChange= {(value) =>  onSubmit(value)}\r\n        name={label}\r\n        placeHolder={text}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withStreamlitConnection(Custom_keywords)","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Custom_keywords from \"./keywords\"\r\n\r\n// Lots of import to define a Styletron engine and load the light theme of baseui\r\n// @ts-ignore\r\nimport { Client as Styletron } from \"styletron-engine-atomic\"\r\nimport { Provider as StyletronProvider } from \"styletron-react\"\r\nimport { ThemeProvider, LightTheme } from \"baseui\"\r\n\r\nconst engine = new Styletron()\r\n\r\n// Wrap your CustomSlider with the baseui them\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StyletronProvider value={engine}>\r\n      <ThemeProvider theme={LightTheme}>\r\n        <Custom_keywords />\r\n      </ThemeProvider>\r\n    </StyletronProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}