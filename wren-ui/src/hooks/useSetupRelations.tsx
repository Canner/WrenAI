import { useState } from 'react';
import { JOIN_TYPE, SETUP } from '@/utils/enum';
import { useRouter } from 'next/router';
import { SelectedRecommendRelations } from '@/components/pages/setup/DefineRelations';
import { Path } from '@/utils/enum';

export default function useSetupRelations() {
  const [stepKey, setStepKey] = useState(SETUP.RECOMMEND_RELATIONS);
  const [selectedRecommendRelations, setSelectedRecommendRelations] = useState<
    SelectedRecommendRelations | undefined
  >(undefined);

  const router = useRouter();

  const submitReleations = async (_relations: SelectedRecommendRelations) => {
    // TODO: implement submitReleations API
    router.push(Path.Exploration);
  };

  const onBack = () => {
    if (stepKey === SETUP.DEFINE_RELATIONS) {
      setStepKey(SETUP.RECOMMEND_RELATIONS);
    } else {
      router.push('/setup/models');
    }
  };

  const onNext = (data: {
    selectedRecommendRelations: SelectedRecommendRelations;
    relations: SelectedRecommendRelations;
  }) => {
    if (stepKey === SETUP.RECOMMEND_RELATIONS) {
      setSelectedRecommendRelations(data.selectedRecommendRelations);
      setStepKey(SETUP.DEFINE_RELATIONS);
    }

    if (stepKey === SETUP.DEFINE_RELATIONS) {
      submitReleations(data.relations);
    }
  };

  return {
    stepKey,
    recommendRelations,
    selectedRecommendRelations,
    onBack,
    onNext,
  };
}

// TODO: remove it when connecting to backend
const recommendRelations = [
  {
    name: 'Customer',
    relations: [
      {
        name: 'Customer_Order',
        fromField: { model: 'Customer', field: 'custkey' },
        toField: { model: 'Orders', field: 'custkey' },
        type: JOIN_TYPE.ONE_TO_MANY,
        isAutoGenerated: true,
      },
      {
        name: 'Customer_trans',
        fromField: { model: 'Customer', field: 'custkey' },
        toField: { model: 'trans', field: 'custkey' },
        type: JOIN_TYPE.ONE_TO_MANY,
        isAutoGenerated: true,
      },
    ],
  },
  {
    name: 'Order',
    relations: [
      {
        name: 'Order_Lineitem',
        fromField: { model: 'Order', field: 'orderkey' },
        toField: { model: 'Lineitem', field: 'orderkey' },
        type: JOIN_TYPE.ONE_TO_MANY,
        isAutoGenerated: true,
      },
    ],
  },
];
