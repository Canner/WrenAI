import type { ColumnsType } from 'antd/es/table';
import { JOIN_TYPE } from '@/utils/enum';
import { ModelIcon } from '@/utils/icons';
import SelectionTable from '@/components/table/SelectionTable';

interface ModelField {
  model: string;
  field: string;
}

export interface SourceTableColumn {
  name: string;
  type: string;
}

export interface SourceTable {
  id: string;
  sqlName: string;
  displayName: string;
  columns: SourceTableColumn[];
}

export interface RelationsDataType {
  name: string;
  fromField: ModelField;
  isAutoGenerated: boolean;
  joinType: JOIN_TYPE;
  toField: ModelField;
  properties: Record<string, any>;
}

interface Props {
  columns: ColumnsType<RelationsDataType> | ColumnsType<SourceTableColumn>;
  dataSource: RelationsDataType[] | SourceTableColumn[];
  enableRowSelection?: boolean;
  extra?: (
    onCollapseOpen: (
      event: React.MouseEvent<HTMLElement, MouseEvent>,
      key: string,
    ) => void,
  ) => React.ReactNode;
  onChange?: (value: any | null) => void;
  tableTitle: string;
  rowKey: (record: RelationsDataType | SourceTableColumn) => string;
}

export default function ModelRelationSelectionTable(props: Props) {
  return (
    <SelectionTable
      {...props}
      tableHeader={
        <>
          <ModelIcon className="pr-2 text-md" />
          {props.tableTitle}
        </>
      }
    />
  );
}
